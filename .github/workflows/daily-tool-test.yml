name: Daily Tool Test Report

on:
  schedule:
    # Run daily at 06:00 UTC
    - cron: '0 6 * * *'
  workflow_dispatch:  # Allow manual trigger
    inputs:
      iterations:
        description: 'Number of test iterations per model'
        required: false
        default: '20'
        type: string

jobs:
  test-models:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Run WatsonX Tool Tests
      env:
        WATSONX_APIKEY: ${{ secrets.WATSONX_APIKEY }}
        WATSONX_PROJECT_ID: ${{ secrets.WATSONX_PROJECT_ID }}
        WATSONX_URL: ${{ secrets.WATSONX_URL }}
        WATSONX_REGION: ${{ secrets.WATSONX_REGION }}
        WATSONX_API_VERSION: ${{ secrets.WATSONX_API_VERSION }}
        WATSONX_TOOL_CLIENT: watsonx
        WATSONX_TOOL_ITERATIONS: ${{ inputs.iterations || '20' }}
        WATSONX_TOOL_DEBUG: 'false'
      run: |
        # Create reports directory if it doesn't exist
        mkdir -p reports
        mkdir -p reports/history
        
        # Generate timestamp for report filename
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        REPORT_FILE="reports/tool_test_report_${TIMESTAMP}.md"
        
        # Run the tool test with HTML output
        echo "# WatsonX Tool Test Report" > "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
        echo "**Generated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> "$REPORT_FILE"
        echo "**Test Iterations:** ${{ inputs.iterations || '20' }} per model" >> "$REPORT_FILE"
        echo "**Repository:** ${{ github.repository }}" >> "$REPORT_FILE"
        echo "**Commit:** ${{ github.sha }}" >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
        echo "## Test Results" >> "$REPORT_FILE"
        echo "" >> "$REPORT_FILE"
        
        # Run the actual test and create both text and HTML reports
        watsonx-tool-tester test --iterations ${{ inputs.iterations || '20' }} --save-history | tee -a "$REPORT_FILE"
        
        # Generate HTML report
        HTML_REPORT_FILE="reports/tool_test_report_${TIMESTAMP}.html"
        watsonx-tool-tester test --iterations ${{ inputs.iterations || '20' }} --output "$HTML_REPORT_FILE" --html-output --save-history
        
        # Save the latest report as symlinks
        ln -sf "tool_test_report_${TIMESTAMP}.md" reports/latest_report.md
        ln -sf "tool_test_report_${TIMESTAMP}.html" reports/latest_report.html
        
        # Set environment variables for later steps
        echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV
        echo "HTML_REPORT_FILE=$HTML_REPORT_FILE" >> $GITHUB_ENV
        echo "TIMESTAMP=$TIMESTAMP" >> $GITHUB_ENV

    - name: Upload Test Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: tool-test-report-${{ env.TIMESTAMP }}
        path: reports/
        retention-days: 90

    - name: Commit and Push Report
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the new report
        git add reports/
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Add daily tool test report - ${{ env.TIMESTAMP }}"
          git push
        fi

    - name: Update README with Latest Report Link
      run: |
        # Update README.md to include link to latest report
        if grep -q "## Latest Tool Test Report" README.md; then
          # Replace existing section
          sed -i '/## Latest Tool Test Report/,$d' README.md
        fi
        
        echo "" >> README.md
        echo "## Latest Tool Test Report" >> README.md
        echo "" >> README.md
        echo "ðŸ“Š **[View Latest Test Report (HTML)](reports/latest_report.html)** | **[Markdown](reports/latest_report.md)**" >> README.md
        echo "" >> README.md
        echo "- **Last Updated:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> README.md
        echo "- **Test Iterations:** ${{ inputs.iterations || '20' }} per model" >> README.md
        echo "- **All Reports:** [Browse Reports Directory](reports/)" >> README.md
        echo "" >> README.md
        echo "*Reports are generated daily at 06:00 UTC and include comprehensive tool calling tests for all available models.*" >> README.md

    - name: Commit README Update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add the updated README
        git add README.md
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No README changes to commit"
        else
          git commit -m "Update README with latest tool test report link - ${{ env.TIMESTAMP }}"
          git push
        fi

    - name: Create Release for Weekly Reports
      # Create a release every Sunday with the week's reports
      if: github.event_name == 'schedule' && contains(github.event.schedule, '0 6 * * 0')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: weekly-report-${{ env.TIMESTAMP }}
        name: Weekly Tool Test Report - ${{ env.TIMESTAMP }}
        body: |
          Weekly WatsonX Tool Test Report
          
          This release contains the tool test reports generated during the week.
          
          **Key Features:**
          - Daily automated testing of all available models
          - ${{ inputs.iterations || '20' }} iterations per model for reliability assessment
          - Comprehensive tool calling capability analysis
          
          **Access Reports:**
          - [Latest Report](reports/latest_report.md)
          - [All Reports](reports/)
          
          Generated automatically by GitHub Actions.
        draft: false
        prerelease: false
        files: reports/*

  cleanup-old-reports:
    runs-on: ubuntu-latest
    needs: test-models
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Clean up old reports and history
      run: |
        # Keep only the last 90 days of reports
        if [ -d "reports" ]; then
          cd reports
          # Find and remove files older than 90 days
          find . -name "tool_test_report_*.md" -type f -mtime +90 -delete
          find . -name "tool_test_report_*.html" -type f -mtime +90 -delete
          
          cd ..
          
          # Clean up old historical data (keep last 90 days)
          if command -v python3 &> /dev/null; then
            python3 -c "from watsonx_tool_tester.utils.history_manager import HistoryManager; hm = HistoryManager(); hm.cleanup_old_data(days_to_keep=90); print('Historical data cleanup completed')"
          else
            echo "Python3 not available, skipping historical data cleanup"
          fi
          
          # If any files were deleted, commit the changes
          if [ -n "$(git status --porcelain reports/)" ]; then
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add reports/
            git commit -m "Clean up old test reports and historical data"
            git push
          fi
        fi
